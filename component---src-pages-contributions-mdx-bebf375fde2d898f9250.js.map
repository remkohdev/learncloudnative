{"version":3,"sources":["webpack:///./node_modules/gatsby-theme-carbon/src/components/PageHeader/index.js","webpack:///./node_modules/gatsby-theme-carbon/src/components/PageHeader/PageHeader.js","webpack:///./node_modules/gatsby-theme-carbon/src/components/EditLink/index.js","webpack:///./node_modules/gatsby-theme-carbon/src/components/EditLink/EditLink.js","webpack:///./node_modules/gatsby-theme-carbon/src/components/PageTabs/index.js","webpack:///./node_modules/gatsby-theme-carbon/src/components/PageTabs/PageTabs.js","webpack:///./node_modules/gatsby-theme-carbon/src/templates/Default.js","webpack:///./node_modules/gatsby-theme-carbon/src/components/EditLink/EditLink.module.scss","webpack:///./node_modules/gatsby-theme-carbon/src/components/PageTabs/PageTabs.module.scss","webpack:///./node_modules/gatsby-theme-carbon/src/components/PageHeader/PageHeader.module.scss","webpack:///./src/pages/contributions.mdx"],"names":["PageHeader","title","tabs","className","cx","pageHeader","withTabs","length","id","text","EditLink","relativePagePath","repositoryProp","repository","useStaticQuery","site","siteMetadata","baseUrl","subDirectory","href","branch","row","link","PageTabs","render","this","props","slug","currentTab","split","filter","Boolean","slice","pageTabs","map","tab","slugifiedTab","slugify","lower","strict","selected","currentTabRegex","RegExp","replace","key","selectedItem","listItem","to","tabsContainer","list","React","Component","Default","pageContext","children","location","Title","frontmatter","titleType","theme","description","keywords","pathPrefix","pathname","Layout","homepage","pageTitle","pageDescription","pageKeywords","label","Main","padded","NextPrevious","Utils","module","exports","_frontmatter","makeShortcode","name","console","warn","PageDescription","AnchorLinks","AnchorLink","MDXLayout","DefaultLayout","MDXContent","components","mdxType","isMDXComponent"],"mappings":"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","file":"component---src-pages-contributions-mdx-bebf375fde2d898f9250.js","sourcesContent":["import PageHeader from './PageHeader';\n\nexport default PageHeader;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport cx from 'classnames';\nimport { pageHeader, withTabs, text } from './PageHeader.module.scss';\n\nconst PageHeader = ({ title, tabs = [] }) => (\n  <div className={cx(pageHeader, { [withTabs]: tabs.length })}>\n    <div className=\"bx--grid\">\n      <div className=\"bx--row\">\n        <div className=\"bx--col-lg-12\">\n          <h1 id=\"page-title\" className={text}>\n            {title}\n          </h1>\n        </div>\n      </div>\n    </div>\n  </div>\n);\n\nPageHeader.propTypes = {\n  /**\n   * Specify the title for the page\n   */\n  title: PropTypes.node,\n};\n\nexport default PageHeader;\n","import EditLink from './EditLink';\n\nexport default EditLink;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { graphql, useStaticQuery } from 'gatsby';\n\nimport { link, row } from './EditLink.module.scss';\n\nconst EditLink = ({ relativePagePath, repository: repositoryProp }) => {\n  const {\n    site: {\n      siteMetadata: { repository },\n    },\n  } = useStaticQuery(graphql`\n    query REPOSITORY_QUERY {\n      site {\n        siteMetadata {\n          repository {\n            baseUrl\n            subDirectory\n            branch\n          }\n        }\n      }\n    }\n  `);\n\n  const { baseUrl, subDirectory, branch } = repositoryProp || repository;\n\n  const href = `${baseUrl}/edit/${branch}${subDirectory}/src/pages${relativePagePath}`;\n\n  return baseUrl ? (\n    <div className={`bx--row ${row}`}>\n      <div className=\"bx--col\">\n        <a className={link} href={href}>\n          Edit this page on GitHub\n        </a>\n      </div>\n    </div>\n  ) : null;\n};\n\nEditLink.propTypes = {\n  repository: PropTypes.shape({\n    baseUrl: PropTypes.string,\n    subDirectory: PropTypes.string,\n    branch: PropTypes.string,\n  }),\n  relativePagePath: PropTypes.string,\n};\n\nexport default EditLink;\n","import PageTabs from './PageTabs';\n\nexport default PageTabs;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Link } from 'gatsby';\nimport slugify from 'slugify';\nimport cx from 'classnames';\n\nimport {\n  tabsContainer,\n  list,\n  selectedItem,\n  listItem,\n  link,\n} from './PageTabs.module.scss';\n\nexport default class PageTabs extends React.Component {\n  render() {\n    const { tabs, slug } = this.props;\n    const currentTab = slug.split('/').filter(Boolean).slice(-1)[0];\n\n    const pageTabs = tabs.map((tab) => {\n      const slugifiedTab = slugify(tab, { lower: true, strict: true });\n      const selected = slugifiedTab === currentTab;\n      // matches with or without trailing slash: /?\n      // matches with or without hash link: (#.*)?\n      const currentTabRegex = new RegExp(`${currentTab}/?(#.*)?$`);\n      const href = slug.replace(currentTabRegex, slugifiedTab);\n      return (\n        <li key={tab} className={cx({ [selectedItem]: selected }, listItem)}>\n          <Link className={link} to={`${href}`}>\n            {tab}\n          </Link>\n        </li>\n      );\n    });\n\n    return (\n      <div className={tabsContainer}>\n        <div className=\"bx--grid\">\n          <div className=\"bx--row\">\n            <div className=\"bx--col-lg-12 bx--col-no-gutter\">\n              <nav>\n                <ul className={list}>{pageTabs}</ul>\n              </nav>\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nPageTabs.propTypes = {\n  tabs: PropTypes.array,\n  slug: PropTypes.string,\n};\n","import React from 'react';\nimport slugify from 'slugify';\nimport { useStaticQuery, graphql } from 'gatsby';\n\nimport Utils from '../components/Utils';\nimport Layout from '../components/Layout';\nimport PageHeader from '../components/PageHeader';\nimport EditLink from '../components/EditLink';\nimport NextPrevious from '../components/NextPrevious';\nimport PageTabs from '../components/PageTabs';\nimport Main from '../components/Main';\n\nconst Default = ({ pageContext, children, location, Title }) => {\n  const { frontmatter = {}, relativePagePath, titleType } = pageContext;\n  const { tabs, title, theme, description, keywords } = frontmatter;\n\n  // get the path prefix if it exists\n  const {\n    site: { pathPrefix },\n  } = useStaticQuery(graphql`\n    query PATH_PREFIX_QUERY {\n      site {\n        pathPrefix\n      }\n    }\n  `);\n\n  // let gatsby handle prefixing\n  const slug = pathPrefix\n    ? location.pathname.replace(pathPrefix, '')\n    : location.pathname;\n\n  const getCurrentTab = () => {\n    if (!tabs) return '';\n    return (\n      slug.split('/').filter(Boolean).slice(-1)[0] ||\n      slugify(tabs[0], { lower: true })\n    );\n  };\n\n  const currentTab = getCurrentTab();\n\n  return (\n    <Layout\n      tabs={tabs}\n      homepage={false}\n      theme={theme}\n      pageTitle={title}\n      pageDescription={description}\n      pageKeywords={keywords}\n      titleType={titleType}>\n      <PageHeader title={Title ? <Title /> : title} label=\"label\" tabs={tabs} />\n      {tabs && <PageTabs slug={slug} tabs={tabs} currentTab={currentTab} />}\n      <Main padded>\n        {children}\n        <EditLink relativePagePath={relativePagePath} />\n      </Main>\n      <NextPrevious\n        pageContext={pageContext}\n        location={location}\n        slug={slug}\n        tabs={tabs}\n        currentTab={currentTab}\n      />\n      <Utils />\n    </Layout>\n  );\n};\n\nexport default Default;\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"bxTextTruncateEnd\":\"EditLink-module--bx--text-truncate--end--2pqje\",\"bxTextTruncateFront\":\"EditLink-module--bx--text-truncate--front--3_lIE\",\"link\":\"EditLink-module--link--1qzW3\",\"row\":\"EditLink-module--row--1B9Gk\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"bxTextTruncateEnd\":\"PageTabs-module--bx--text-truncate--end--267NA\",\"bxTextTruncateFront\":\"PageTabs-module--bx--text-truncate--front--3xEQF\",\"tabsContainer\":\"PageTabs-module--tabs-container--8N4k0\",\"list\":\"PageTabs-module--list--3eFQc\",\"listItem\":\"PageTabs-module--list-item--nUmtD\",\"link\":\"PageTabs-module--link--1mDJ1\",\"selectedItem\":\"PageTabs-module--selected-item--YPVr3\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"bxTextTruncateEnd\":\"PageHeader-module--bx--text-truncate--end--mZWeX\",\"bxTextTruncateFront\":\"PageHeader-module--bx--text-truncate--front--3zvrI\",\"pageHeader\":\"PageHeader-module--page-header--3hIan\",\"withTabs\":\"PageHeader-module--with-tabs--3nKxA\",\"text\":\"PageHeader-module--text--o9LFq\"};","import * as React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsx mdx */\n\nimport DefaultLayout from \"/Users/remkohdev@us.ibm.com/dev/src/github/learncloudnative/node_modules/gatsby-theme-carbon/src/templates/Default.js\";\nexport const _frontmatter = {};\n\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n  return <div {...props} />;\n};\n\nconst PageDescription = makeShortcode(\"PageDescription\");\nconst AnchorLinks = makeShortcode(\"AnchorLinks\");\nconst AnchorLink = makeShortcode(\"AnchorLink\");\nconst MDXLayout = DefaultLayout;\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...props} components={components} mdxType=\"MDXLayout\">\n    <PageDescription mdxType=\"PageDescription\">\n      <p>{`Use this guide to contribute to the theme. We’ll show you how to get the development environment set up as quickly as possible so you can start contributing.`}</p>\n    </PageDescription>\n    <AnchorLinks mdxType=\"AnchorLinks\">\n      <AnchorLink mdxType=\"AnchorLink\">\n        <p>{`Project setup`}</p>\n      </AnchorLink>\n      <AnchorLink mdxType=\"AnchorLink\">\n        <p>{`Development`}</p>\n      </AnchorLink>\n      <AnchorLink mdxType=\"AnchorLink\">\n        <p>{`Work in a branch`}</p>\n      </AnchorLink>\n      <AnchorLink mdxType=\"AnchorLink\">\n        <p>{`Sass and CSS Modules`}</p>\n      </AnchorLink>\n      <AnchorLink mdxType=\"AnchorLink\">\n        <p>{`VS Code`}</p>\n      </AnchorLink>\n      <AnchorLink mdxType=\"AnchorLink\">\n        <p>{`Test pages`}</p>\n      </AnchorLink>\n      <AnchorLink mdxType=\"AnchorLink\">\n        <p>{`Publishing`}</p>\n      </AnchorLink>\n    </AnchorLinks>\n    <h2>{`Project setup`}</h2>\n    <ol>\n\n      <li {...{\n        \"parentName\": \"ol\"\n      }}>\n\n        <p {...{\n          \"parentName\": \"li\"\n        }}>{`Go to `}\n          <a {...{\n            \"href\": \"https://github.com/carbon-design-system/gatsby-theme-carbon\",\n            \"parentName\": \"p\"\n          }}>{`gatsby-theme-carbon`}</a>\n          {` and click the `}\n          <inlineCode {...{\n            \"parentName\": \"p\"\n          }}>{`Fork`}</inlineCode>\n          {` button in the top-right corner.`}</p>\n\n      </li>\n\n\n      <li {...{\n        \"parentName\": \"ol\"\n      }}>\n\n        <p {...{\n          \"parentName\": \"li\"\n        }}>{`After it’s finished, click on the `}\n          <inlineCode {...{\n            \"parentName\": \"p\"\n          }}>{`Clone or Download`}</inlineCode>\n          {` button and copy the contents.`}</p>\n\n      </li>\n\n\n      <li {...{\n        \"parentName\": \"ol\"\n      }}>\n\n        <p {...{\n          \"parentName\": \"li\"\n        }}>{`In your terminal, clone the repo into your directory of choice`}</p>\n\n\n        <pre {...{\n          \"parentName\": \"li\"\n        }}><code {...{\n            \"className\": \"language-sh\",\n            \"parentName\": \"pre\"\n          }}>{`git clone [PASTE_URL_HERE]\ncd gatsby-theme-carbon\n`}</code></pre>\n\n      </li>\n\n\n      <li {...{\n        \"parentName\": \"ol\"\n      }}>\n\n        <p {...{\n          \"parentName\": \"li\"\n        }}>{`When you clone your forked repo the `}\n          <inlineCode {...{\n            \"parentName\": \"p\"\n          }}>{`origin`}</inlineCode>\n          {` is set to your fork by default. You’ll want to add a remote that points to the upstream repo.`}</p>\n\n\n        <pre {...{\n          \"parentName\": \"li\"\n        }}><code {...{\n            \"className\": \"language-sh\",\n            \"parentName\": \"pre\"\n          }}>{`git remote add upstream git@github.com:carbon-design-system/gatsby-theme-carbon.git\n`}</code></pre>\n\n      </li>\n\n\n      <li {...{\n        \"parentName\": \"ol\"\n      }}>\n\n        <p {...{\n          \"parentName\": \"li\"\n        }}>{`In your terminal, verify that the remotes have been set`}</p>\n\n\n        <pre {...{\n          \"parentName\": \"li\"\n        }}><code {...{\n            \"className\": \"language-sh\",\n            \"parentName\": \"pre\"\n          }}>{`git remote -v\n`}</code></pre>\n\n      </li>\n\n    </ol>\n    <h2>{`Development`}</h2>\n    <p>{`We use `}\n      <a {...{\n        \"href\": \"https://yarnpkg.com/lang/en/docs/install/\",\n        \"parentName\": \"p\"\n      }}>{`yarn`}</a>\n      {` and yarn workspaces to develop the Carbon Gatsby theme. This allows us to have a development environment that’s closely linked to the theme with minimal setup. Run `}\n      <inlineCode {...{\n        \"parentName\": \"p\"\n      }}>{`yarn install`}</inlineCode>\n      {` to install all of the projects dependencies.`}</p>\n    <p>{`This project has two packages: the actual theme package (`}\n      <inlineCode {...{\n        \"parentName\": \"p\"\n      }}>{`gatsby-theme-carbon`}</inlineCode>\n      {`) and the `}\n      <inlineCode {...{\n        \"parentName\": \"p\"\n      }}>{`example`}</inlineCode>\n      {` package. The example package emulates a project which uses the theme. Its only dependencies are Gatsby, React, and the adjacent theme package. The `}\n      <inlineCode {...{\n        \"parentName\": \"p\"\n      }}>{`example`}</inlineCode>\n      {` package also serves as the theme’s documentation and `}\n      <a {...{\n        \"href\": \"https://gatsby-theme-carbon.now.sh\",\n        \"parentName\": \"p\"\n      }}>{`website`}</a>\n      {`; it’s deployed on every merge to master.`}</p>\n    <p>{`New theme development will happen in the theme package while documentation and testing of that change will occur through changes in the example directory.`}</p>\n    <h3>{`Development scripts`}</h3>\n    <ul>\n\n      <li {...{\n        \"parentName\": \"ul\"\n      }}><inlineCode {...{\n          \"parentName\": \"li\"\n        }}>{`yarn dev`}</inlineCode>\n        {` – start the development environment`}</li>\n\n\n      <li {...{\n        \"parentName\": \"ul\"\n      }}><inlineCode {...{\n          \"parentName\": \"li\"\n        }}>{`yarn dev:clean`}</inlineCode>\n        {` – clear cache and restart dev`}</li>\n\n\n      <li {...{\n        \"parentName\": \"ul\"\n      }}><inlineCode {...{\n          \"parentName\": \"li\"\n        }}>{`yarn format`}</inlineCode>\n        {` – format your code with prettier`}</li>\n\n\n      <li {...{\n        \"parentName\": \"ul\"\n      }}><inlineCode {...{\n          \"parentName\": \"li\"\n        }}>{`yarn lint`}</inlineCode>\n        {` - check for errors in your javascript`}</li>\n\n\n      <li {...{\n        \"parentName\": \"ul\"\n      }}><inlineCode {...{\n          \"parentName\": \"li\"\n        }}>{`yarn test:prefix`}</inlineCode>\n        {` – build and serve with a path prefix`}</li>\n\n    </ul>\n    <h2>{`Work in a branch`}</h2>\n    <p>{`You should always start a new project by pulling upstream changes into master and then creating a new branch. This workflow ensures you don’t accidentally commit anything to your master branch and get stuck when trying to open a pull request.`}</p>\n    <pre><code {...{\n        \"className\": \"language-sh\",\n        \"parentName\": \"pre\"\n      }}>{`git checkout master\ngit pull upstream master\ngit checkout -b my-branch-name\n`}</code></pre>\n    <h3>{`Commit messages`}</h3>\n    <p>{`For commit messages we use `}\n      <a {...{\n        \"href\": \"https://gist.github.com/stephenparish/9941e89d80e2bc58a153#allowed-type\",\n        \"parentName\": \"p\"\n      }}>{`Angular commit conventions`}</a>\n      {` to dictate whether a commit is for a feature, fix, docs, etc. You need to prefix your commits with one of the following:`}</p>\n    <ul>\n\n      <li {...{\n        \"parentName\": \"ul\"\n      }}>{`feat (feature)`}</li>\n\n\n      <li {...{\n        \"parentName\": \"ul\"\n      }}>{`fix (bug fix)`}</li>\n\n\n      <li {...{\n        \"parentName\": \"ul\"\n      }}>{`docs (documentation)`}</li>\n\n\n      <li {...{\n        \"parentName\": \"ul\"\n      }}>{`style (formatting, missing semi colons, …)`}</li>\n\n\n      <li {...{\n        \"parentName\": \"ul\"\n      }}>{`refactor`}</li>\n\n\n      <li {...{\n        \"parentName\": \"ul\"\n      }}>{`test (when adding missing tests)`}</li>\n\n\n      <li {...{\n        \"parentName\": \"ul\"\n      }}>{`chore (maintain)`}</li>\n\n    </ul>\n    <pre><code {...{\n        \"className\": \"language-sh\",\n        \"parentName\": \"pre\"\n      }}>{`git commit -m \"chore: this is a test commit message\"\n`}</code></pre>\n    <h3>{`Opening a Pull request`}</h3>\n    <p>{`When you’re ready to open a pull request, push to your origin remote.`}</p>\n    <pre><code {...{\n        \"className\": \"language-sh\",\n        \"parentName\": \"pre\"\n      }}>{`git push origin my-branch-name\n`}</code></pre>\n    <p>{`You’ll get a message in your terminal with a URL to open up a pull request in the upstream repository. Navigate to that URL and be sure to give a detailed summary of your pull request in the title and body section of the form.`}</p>\n    <h2>{`Sass and CSS Modules`}</h2>\n    <p>{`For internal theme components we use `}\n      <a {...{\n        \"href\": \"https://sass-lang.com/documentation/syntax\",\n        \"parentName\": \"p\"\n      }}>{`Sass`}</a>\n      {` and `}\n      <a {...{\n        \"href\": \"https://github.com/css-modules/css-modules#css-modules\",\n        \"parentName\": \"p\"\n      }}>{`CSS Modules`}</a>\n      {`. This allows us to take advantage of the Carbon Design System resources while not worrying about className collisions. By default, each `}\n      <inlineCode {...{\n        \"parentName\": \"p\"\n      }}>{`.scss`}</inlineCode>\n      {` file will be supplied with all of the Carbon Sass `}\n      <a {...{\n        \"href\": \"https://github.com/carbon-design-system/carbon/blob/master/packages/components/src/globals/scss/_vars.scss\",\n        \"parentName\": \"p\"\n      }}>{`variables`}</a>\n      {`: color, spacing, theme, and motion, as well as type and layout mixins, are imported automatically.`}</p>\n    <p>{`You should colocate your stylesheet with the component(s) that import it. If the component is `}\n      <inlineCode {...{\n        \"parentName\": \"p\"\n      }}>{`TreeView`}</inlineCode>\n      {` then the stylesheet should be `}\n      <inlineCode {...{\n        \"parentName\": \"p\"\n      }}>{`TreeView.module.scss`}</inlineCode>\n      {`. All contained within the `}\n      <inlineCode {...{\n        \"parentName\": \"p\"\n      }}>{`TreeView`}</inlineCode>\n      {` directory.`}</p>\n    <h3>{`CSS Modules`}</h3>\n    <p>{`You don’t need to prefix your classes as CSS Modules will generate unique class names for you. Import the class from the `}\n      <inlineCode {...{\n        \"parentName\": \"p\"\n      }}>{`.scss`}</inlineCode>\n      {` file.`}</p>\n    <pre><code {...{\n        \"className\": \"language-scss\",\n        \"metastring\": \"path=TreeView.module.scss\",\n        \"path\": \"TreeView.module.scss\",\n        \"parentName\": \"pre\"\n      }}>{`.treeView {\n  color: $text-01;\n}\n`}</code></pre>\n    <pre><code {...{\n        \"className\": \"language-jsx\",\n        \"metastring\": \"path=TreeView.js\",\n        \"path\": \"TreeView.js\",\n        \"parentName\": \"pre\"\n      }}>{`import { treeView } from \"./style.css\";\n\nconst TreeView = props => <div className={treeView} />;\n`}</code></pre>\n    <p>{`For conditionally applying class names, use the `}\n      <inlineCode {...{\n        \"parentName\": \"p\"\n      }}>{`classname`}</inlineCode>\n      {` library. Note how we’re using a `}\n      <a {...{\n        \"href\": \"https://tylermcginnis.com/computed-property-names/\",\n        \"parentName\": \"p\"\n      }}>{`computed property name`}</a>\n      {` for the property being based to `}\n      <inlineCode {...{\n        \"parentName\": \"p\"\n      }}>{`cx`}</inlineCode>\n      {`. That’s because the className isn’t literally `}\n      <inlineCode {...{\n        \"parentName\": \"p\"\n      }}>{`\"long\"`}</inlineCode>\n      {` it’s a value generated by CSS Modules and placed in the `}\n      <inlineCode {...{\n        \"parentName\": \"p\"\n      }}>{`long`}</inlineCode>\n      {` variable.`}</p>\n    <pre><code {...{\n        \"className\": \"language-jsx\",\n        \"metastring\": \"path=TreeView.js\",\n        \"path\": \"TreeView.js\",\n        \"parentName\": \"pre\"\n      }}>{`import cx from \"classname\";\nimport { treeView, long } from \"./style.css\";\n\nconst TreeView = props => {\n  const className = cx(treeView, {\n    [long]: props.long\n  });\n  const TreeView = props => <div className={className} />;\n};\n`}</code></pre>\n    <p>{`If you need to target a global class not processed by CSS Modules, you can do so with the `}\n      <a {...{\n        \"href\": \"https://github.com/css-modules/css-modules#exceptions\",\n        \"parentName\": \"p\"\n      }}>{`global selector`}</a>\n      {`.`}</p>\n    <pre><code {...{\n        \"className\": \"language-scss\",\n        \"parentName\": \"pre\"\n      }}>{`:global(.bx--grid) .codeBlock {\n  @include carbon--type-style(\"code-01\");\n}\n`}</code></pre>\n    <h2>{`VS Code`}</h2>\n    <p>{`To get linting error feedback while writing javascript and SCSS in VS Code, install the `}\n      <a {...{\n        \"href\": \"https://marketplace.visualstudio.com/items?itemName=shinnn.stylelint\",\n        \"parentName\": \"p\"\n      }}>{`stylelint`}</a>\n      {` and `}\n      <a {...{\n        \"href\": \"https://marketplace.visualstudio.com/items?itemName=dbaeumer.vscode-eslint\",\n        \"parentName\": \"p\"\n      }}>{`ESlint`}</a>\n      {` extensions. We use ESLint’s Prettier rules to format and lint all of our JavaScript in one pass. To get your code to format properly on save, add the following to a `}\n      <inlineCode {...{\n        \"parentName\": \"p\"\n      }}>{`.vscode/settings.json`}</inlineCode>\n      {` in the root of your project`}</p>\n    <pre><code {...{\n        \"className\": \"language-json\",\n        \"metastring\": \"path=.vscode/settings.json\",\n        \"path\": \".vscode/settings.json\",\n        \"parentName\": \"pre\"\n      }}>{`{\n  \"editor.formatOnSave\": true,\n  \"[javascript]\": {\n    \"editor.formatOnSave\": false\n  },\n  \"[javascriptreact]\": {\n    \"editor.formatOnSave\": false\n  },\n  \"eslint.autoFixOnSave\": true,\n  \"prettier.disableLanguages\": [\"javascript\", \"javascriptreact\"]\n}\n`}</code></pre>\n    <p>{`To lint the entire project and get errors in your `}\n      <inlineCode {...{\n        \"parentName\": \"p\"\n      }}>{`Problems`}</inlineCode>\n      {` tray, you can add the following to a `}\n      <inlineCode {...{\n        \"parentName\": \"p\"\n      }}>{`.vscode/tasks.json`}</inlineCode>\n      {` file in the root of your project. You can run these tasks with `}\n      <inlineCode {...{\n        \"parentName\": \"p\"\n      }}>{`cmd+shift+d`}</inlineCode></p>\n    <pre><code {...{\n        \"className\": \"language-json\",\n        \"metastring\": \"path=.vscode/tasks.json\",\n        \"path\": \".vscode/tasks.json\",\n        \"parentName\": \"pre\"\n      }}>{`{\n  \"version\": \"2.0.0\",\n  \"tasks\": [\n    {\n      \"type\": \"npm\",\n      \"script\": \"lint:js\",\n      \"problemMatcher\": \"$eslint-stylish\"\n    },\n    {\n      \"type\": \"npm\",\n      \"script\": \"lint:scss\",\n      \"problemMatcher\": {\n        \"owner\": \"stylelint\",\n        \"fileLocation\": [\"relative\", \"\\${workspaceFolder}\"],\n        \"pattern\": [\n          {\n            \"regexp\": \"^([^\\\\\\\\s].*)$\",\n            \"file\": 1\n          },\n          {\n            \"regexp\": \"^\\\\\\\\s+(\\\\\\\\d+):(\\\\\\\\d+)\\\\\\\\s+(✖|warning)\\\\\\\\s+(.*)\\\\\\\\s\\\\\\\\s+(.*)$\",\n            \"line\": 1,\n            \"column\": 2,\n            \"severity\": 3,\n            \"message\": 4,\n            \"code\": 5,\n            \"loop\": true\n          }\n        ]\n      }\n    }\n  ]\n}\n`}</code></pre>\n    <h2>{`Test pages`}</h2>\n    <p>{`If you want to add examples of what you are working on or see changes you’ve made, you can add an MDX file to `}\n      <inlineCode {...{\n        \"parentName\": \"p\"\n      }}>{`packages/src/pages/test`}</inlineCode>\n      {` that will be visible at `}\n      <inlineCode {...{\n        \"parentName\": \"p\"\n      }}>{`(your-server-name)/test/(added-file)`}</inlineCode>\n      {` during development. If you do add a page to the `}\n      <inlineCode {...{\n        \"parentName\": \"p\"\n      }}>{`/test`}</inlineCode>\n      {` directory, update the below list with the file you added and its purpose to be included with your pull request.`}</p>\n    <ul>\n\n      <li {...{\n        \"parentName\": \"ul\"\n      }}><a {...{\n          \"href\": \"/learncloudnative/test/spacing-audit\",\n          \"parentName\": \"li\"\n        }}><inlineCode {...{\n            \"parentName\": \"a\"\n          }}>{`Spacing audit`}</inlineCode></a>\n        {`: use this page to test spacing around components when combined in common patterns.`}</li>\n\n    </ul>\n    <h2>{`Publishing`}</h2>\n    <ol>\n\n      <li {...{\n        \"parentName\": \"ol\"\n      }}>{`figure out if it’s patch or feature`}</li>\n\n\n      <li {...{\n        \"parentName\": \"ol\"\n      }}>{`from the root of the package run `}\n        <inlineCode {...{\n          \"parentName\": \"li\"\n        }}>{`lerna publish patch`}</inlineCode>\n        {` or `}\n        <inlineCode {...{\n          \"parentName\": \"li\"\n        }}>{`lerna publish minor`}</inlineCode></li>\n\n\n      <li {...{\n        \"parentName\": \"ol\"\n      }}>{`git push upstream master —follow-tags`}</li>\n\n\n      <li {...{\n        \"parentName\": \"ol\"\n      }}>{`In the project’s `}\n        <a {...{\n          \"href\": \"https://github.com/carbon-design-system/gatsby-theme-carbon/releases\",\n          \"parentName\": \"li\"\n        }}>{`release tab`}</a>\n        {`, edit the new release to include a summary of new changes`}</li>\n\n    </ol>\n\n  </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      "],"sourceRoot":""}